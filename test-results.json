{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":4,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1553783080390,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mspotcheck3 › The third item in the array that you return in your render function should be a <p> element which says \"some text\" \u001b[39m\u001b[22m\n\n    Custom message:\n      The third item in the array should be a <p> element\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeTruthy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m        let text \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[32m'p'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 41 | \u001b[39m        expect(text\u001b[33m.\u001b[39mexists()\u001b[33m,\u001b[39m \u001b[32m\"The third item in the array should be a <p> element\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                     \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m        expect(text\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"some text\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/spot-checks/spot-check-3.test.js\u001b[39m\u001b[0m\u001b[2m:41:86)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":3,"numPendingTests":0,"perfStats":{"end":1553783085879,"start":1553783082274},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/corinne/Desktop/elevation/react-intro-lesson-solution/tests/spot-checks/spot-check-3.test.js","testResults":[{"ancestorTitles":["spotcheck3"],"duration":26,"failureMessages":[],"fullName":"spotcheck3 Application should render without crashing","location":null,"numPassingAsserts":0,"status":"passed","title":"Application should render without crashing"},{"ancestorTitles":["spotcheck3"],"duration":20,"failureMessages":[],"fullName":"spotcheck3 The first item in the array that you return in your render function should be your morning greeting function","location":null,"numPassingAsserts":0,"status":"passed","title":"The first item in the array that you return in your render function should be your morning greeting function"},{"ancestorTitles":["spotcheck3"],"duration":6,"failureMessages":[],"fullName":"spotcheck3 The second item in the array that you return in your render function should be your evening greeting function","location":null,"numPassingAsserts":0,"status":"passed","title":"The second item in the array that you return in your render function should be your evening greeting function"},{"ancestorTitles":["spotcheck3"],"duration":14,"failureMessages":["Error: Custom message:\n  The third item in the array should be a <p> element\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeTruthy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBeTruthy (/Users/corinne/Desktop/elevation/react-intro-lesson-solution/tests/spot-checks/spot-check-3.test.js:41:86)\n    at Object.asyncJestTest (/Users/corinne/Desktop/elevation/react-intro-lesson-solution/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/corinne/Desktop/elevation/react-intro-lesson-solution/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/corinne/Desktop/elevation/react-intro-lesson-solution/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/corinne/Desktop/elevation/react-intro-lesson-solution/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"spotcheck3 The third item in the array that you return in your render function should be a <p> element which says \"some text\" ","location":null,"numPassingAsserts":0,"status":"failed","title":"The third item in the array that you return in your render function should be a <p> element which says \"some text\" "}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}